env:
    global:
        - REPO_DIR=netcdf4-python
        - BUILD_COMMIT=v1.2.4rel
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - NP_BUILD_DEP=1.7.1
        - NP_TEST_DEP=1.7.1
        - MANYLINUX_URL=https://nipy.bic.berkeley.edu/manylinux
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
        # Following generated with
        # travis encrypt -r MacPython/netcdf4-python-wheels WHEELHOUSE_UPLOADER_SECRET=<the api key>
        - secure:
            "qgMf5wjB1OU7OJT/5AN1+0yfHWlRGCpLn1BT1+RbLTMB3LLHz0qrnzDSuJ3GjlJlYWDyDkgSKCBUFWwy4BnazdRWVj8MTqgpMYlIFKT4XWYYpL82vZ+QCQHe91ExvqF+QAtwxtVhJK1g0bRe908y8IPDkbKqlj4maLm+oUak/DU="

language: python
# Default Python version is usually 2.7
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - NP_BUILD_DEP="1.9.3"
        - NP_TEST_DEP="1.9.3"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
        - NP_BUILD_DEP="1.9.3"
        - NP_TEST_DEP="1.9.3"
    - os: osx
      language: objective-c
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: objective-c
      env:
        - MB_PYTHON_VERSION=3.4
    - os: osx
      language: objective-c
      env:
        - MB_PYTHON_VERSION=3.5
        - NP_BUILD_DEP="1.9.3"
        - NP_TEST_DEP="1.9.3"

before_install:
    - BUILD_DEPENDS="numpy==$NP_BUILD_DEP Cython"
    - TEST_DEPENDS="numpy==$NP_TEST_DEP nose"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - pip install wheelhouse-uploader
    - python -m wheelhouse_uploader upload --local-folder
          ${TRAVIS_BUILD_DIR}/wheelhouse/
          --no-update-index
          wheels
