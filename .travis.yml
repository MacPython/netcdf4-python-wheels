language:
- objective-c
env:
  global:
  #- BUILD_COMMIT='latest-tag'  # comment out to build version in submodule
  - BUILD_COMMIT='v1.2.1rel'
  - REPO_DIR=netcdf4-python
  - SZIP_VERSION=2.1
  - HDF5_VERSION=1.8.14
  - NETCDF_VERSION=4.3.3.1
  - NETCDF_CXX_VERSION=4.2.1
  - LIBCURL_VERSION=7.43.0
  matrix:
  - VERSION=2.7.10 NUMPY_VERSION=1.7.1
  - VERSION=3.3.5 NUMPY_VERSION=1.7.1
  - VERSION=3.4.3 NUMPY_VERSION=1.7.1
  - VERSION=3.5.0 NUMPY_VERSION=1.7.1
install:
  - source terryfy/travis_tools.sh
  - get_python_environment macpython $VERSION venv
  # Use clang to avoid warnings on Python 3.5
  - export CC=clang
  - export CXX=clang++
  # Update to latest wheel version for Python 3.5
  - pip install -U wheel
  - pip install delocate numpy==$NUMPY_VERSION
  - pip install cython
  - source terryfy/library_installers.sh
  - clean_builds
  # We have to build separately for 32 and 64 bit because libcurl headers
  # set the pointer size, and so libcurl won't do dual-arch compile, and
  # netcdf can't compile and link against these headers in dual arch.  So,
  # build the whole stack in 32 and 64 bit, fuse them after.
  # Build for 32-bit
  - set_32_prefix
  - standard_install szip $SZIP_VERSION .tar.gz szip- --enable-encoding=no
  - standard_install hdf5 $HDF5_VERSION .tar.bz2 hdf5- --with-szlib=$BUILD_PREFIX
  - standard_install curl $LIBCURL_VERSION .tar.gz curl- --with-darwinssl
  - standard_install netcdf-c $NETCDF_VERSION .tar.gz netcdf-
  # Clean sources and rebuild for 64-bit
  - set_64_prefix
  - rm -rf $SRC_PREFIX
  - mkdir $SRC_PREFIX
  - standard_install szip $SZIP_VERSION .tar.gz szip- --enable-encoding=no
  - standard_install hdf5 $HDF5_VERSION .tar.bz2 hdf5- --with-szlib=$BUILD_PREFIX
  - standard_install curl $LIBCURL_VERSION .tar.gz curl- --with-darwinssl
  - standard_install netcdf-c $NETCDF_VERSION .tar.gz netcdf-
  - set_dual_prefix
  # Reset library linking to point to local directory
  - python $TERRYFY_DIR/repath_lib_names.py
        $BUILD_PREFIX_32/lib
        $BUILD_PREFIX/lib
        $BUILD_PREFIX_32/lib/*
  - python $TERRYFY_DIR/repath_lib_names.py
        $BUILD_PREFIX_64/lib
        $BUILD_PREFIX/lib
        $BUILD_PREFIX_64/lib/*
  # Fuse 32 and 64-bit libraries
  - cp -a $BUILD_PREFIX_64/* $BUILD_PREFIX
  - python $TERRYFY_DIR/fuse_suff_real_libs.py
        $BUILD_PREFIX/lib
        $BUILD_PREFIX_32/lib
        $BUILD_PREFIX_64/lib
  # Point pkgconfig and nc-config at fused library location
  - perl -pi -e "s#$BUILD_PREFIX_64#$BUILD_PREFIX#g" $BUILD_PREFIX/lib/pkgconfig/*
  - perl -pi -e "s#$BUILD_PREFIX_64#$BUILD_PREFIX#g" $BUILD_PREFIX/bin/*
  # Delete single-arch builds for safety
  - rm -rf $BUILD_CONFIG_32 $BUILD_CONFIG_64
  # Checkout named commit and build wheel
  - if [ -n "$BUILD_COMMIT" ]; then
        checkout_commit $REPO_DIR $BUILD_COMMIT;
    fi
  - cd $REPO_DIR
  - python setup.py bdist_wheel
  - delocate-listdeps dist/*.whl # lists library dependencies
  - delocate-wheel dist/*.whl # copies library dependencies into wheel
  - delocate-addplat --rm-orig -x 10_9 -x 10_10 dist/*.whl
  - pip install dist/*.whl
  # Remove built libraries to make sure wheel is using own libraries
  - clean_builds
script:
  - cd test
  # Python 3.5 needs more recent numpy
  - if [ -n "$(pyver_ge $VERSION 3.5.0)" ]; then
    pip install --upgrade numpy;
    fi
  # Run the tests in default 64-bit mode
  - python run_all.py
  # Run tests for 32-bit Python.org Python
  - arch -i386 python run_all.py
  - cd ..
before_deploy:
  - cd dist
  # Fix for https://github.com/travis-ci/travis-ci/issues/4635
  - rvm 1.9.3 do gem install net-ssh -v 2.9.2
deploy:
  provider: cloudfiles
  username: travis-worker
  api_key:
    secure: "LCjZLORUfF9gZx5Bw0RYZacLV6wgdN+vpNggJmt36FyFwXNdYfc3qT98XT83D29rNTFW7wh3N8WsfWm4zWn8X/N7Ndl545Kq3zIJwnlaHdnd8a7LT6TKXEdrSTPnZQL5Uqxffj2DYYuMvXkTfNm47f3caxQdXVeLTC5YGtTWiBY="
  region: ORD
  container: wheels
  skip_cleanup: true
